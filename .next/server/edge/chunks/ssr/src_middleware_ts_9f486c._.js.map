{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/middleware.ts"],"sourcesContent":["import { clerkMiddleware } from \"@clerk/nextjs/server\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// This example protects all routes including api/trpc routes\r\n// Please edit this to allow other routes to be public as needed.\r\n// See https://clerk.com/docs/references/nextjs/auth-middleware for more information about configuring your middleware\r\nexport default clerkMiddleware({\r\n  publicRoutes: [\"/api/webhooks/stripe\"],\r\n  debug: true,\r\n  afterAuth(auth, req, evt) {\r\n    // Handle after-auth logic here\r\n    if (!auth.userId && !auth.isPublicRoute) {\r\n      return NextResponse.redirect(new URL('/sign-in', req.url));\r\n    }\r\n  }\r\n});\r\n\r\nexport const config = {\r\n  matcher: [\"/((?!.*\\\\..*|_next).*)\", \"/\", \"/(api|trpc)(.*)\"],\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;uCAMe,CAAA,GAAA,6KAAA,CAAA,kBAAe,AAAD,EAAE;IAC7B,cAAc;QAAC;KAAuB;IACtC,OAAO;IACP,WAAU,IAAI,EAAE,GAAG,EAAE,GAAG;QACtB,+BAA+B;QAC/B,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,KAAK,aAAa,EAAE;YACvC,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,IAAI,GAAG;QAC1D;IACF;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAA0B;QAAK;KAAkB;AAC7D"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}